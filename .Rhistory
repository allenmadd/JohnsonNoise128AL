[1,2,3]
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
vin1<-read.csv("VIN1.CSV")
names(vin1)<-c("x", "y")
plot(vin1$x)
plot(vin1$y)
# Chunk 3
vin2<-read.csv("VIN2.CSV")
names(vin2)<-c("x", "y")
vin3<-read.csv("VIN3.CSV")
names(vin3)<-c("x", "y")
vin4<-read.csv("VIN4.CSV")
names(vin4)<-c("x", "y")
vin5<-read.csv("VIN5.CSV")
names(vin5)<-c("x", "y")
vout1<-read.csv("VOUT1.CSV")
names(vout1)<-c("x", "y")
vout2<-read.csv("VOUT2.CSV")
names(vout2)<-c("x", "y")
vout3<-read.csv("VOUT3.CSV")
names(vout3)<-c("x", "y")
vout4<-read.csv("VOUT4.CSV")
names(vout4)<-c("x", "y")
vout5<-read.csv("VOUT5.CSV")
names(vout5)<-c("x", "y")
plot(vout5$y)
# Chunk 4
m_in<- (vin1$y+vin2$y+vin3$y+vin4$y+vin5$y)/5
#take average of vouts
m_vout <- data.frame(Frequency = vout1$x, Volts = (vout1$y+vout2$y+vout3$y+vout4$y+vout5$y)/5)
# Chunk 5
#compute gain using the average vouts and m_in
gain <- data.frame(Frequency = vout1$x, Gain = (m_vout[2]/m_in))
plot(gain)
#this is consistent with the max gain of 150 calculated in class.
# Chunk 6
rmserrors <- sqrt(data.frame(
vin1 = sum(((m_in-vin1$y)^2))/399,
vin2 = sum(((m_in-vin2$y)^2))/399,
vin3 = sum(((m_in-vin3$y)^2))/399,
vin4 = sum(((m_in-vin4$y)^2))/399,
vin5 = sum(((m_in-vin5$y)^2))/399,
vout1 = sum((m_vout$Volts-vout1$y)^2)/399,
vout2 = sum((m_vout$Volts-vout2$y)^2)/399,
vout3 = sum((m_vout$Volts-vout3$y)^2)/399,
vout4 = sum((m_vout$Volts-vout4$y)^2)/399,
vout5 = sum((m_vout$Volts-vout5$y)^2)/399
))
#error in gain, adding in quadrature:
vinerror <-sqrt(sum(rmserrors[1:5]^2))
vouterror <- sqrt(sum(rmserrors[6:10]^2))
gainerror <- gain[2]*sqrt((vinerror/m_in)^2+(vouterror*(m_vout[2])^-1)^2)
#g(f) error
plot(1:399,unlist(gainerror[1]))
# Chunk 7
capacitance <-87.875
capacitanceError <-.594
#df is just the x componenent
riemanSum <- function(fa,fb){
area <-0.5*(125)*(fb-fa)+fa^2
return(area)
}
resistors<-read.csv("experiment2data.csv")
resistors$Average[1]
C = capacitance
integrand <- data.frame(
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[1])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[2])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[3])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[4])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[5])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[6])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[7])^2)
)
area <- data.frame(
G1 =0,
G2 =0,
G3 =0,
G4 =0,
G5 =0,
G6 =0,
G7 =0
)
for(i in 1:length(integrand)){
for(l in 1:398){
if(is.null(integrand[l+1,i])){
break
}else{
area[i] <- area[i]+ riemanSum(integrand[l,i],integrand[l+1,i])
}}
}
# Chunk 8: ErrorShit
qplot(unlist(gain[1]),unlist(gain[2]))+geom_errorbar(aes(x=unlist(gain[1]), ymin=unlist(gain[2]-gainerror[1]), ymax=unlist(gain[2]+gainerror[1])), width=0.5)
library("Hmisc")
plot(gain[1], gain[2], type="n")
with (
data = gain
, expr = errbar(gain[1], gain[2], gain[2]+(gainerror[1]), gain[2]-(gainerror[1]), add=T, pch=1, cap=.1)
)
with (
data = gain
, expr = errbar(gain[1], gain[2], gain[2]+(gainerror[1]), gain[2]-(gainerror[1]), add=F, pch=1, cap=.015, log="x")
)
setwd("~/UCSB/20182019/winter/Phys128/JohnsonNoise/JohnsonNoise128AL")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
vin1<-read.csv("VIN1.CSV")
names(vin1)<-c("x", "y")
plot(vin1$x)
plot(vin1$y)
# Chunk 3
vin2<-read.csv("VIN2.CSV")
names(vin2)<-c("x", "y")
vin3<-read.csv("VIN3.CSV")
names(vin3)<-c("x", "y")
vin4<-read.csv("VIN4.CSV")
names(vin4)<-c("x", "y")
vin5<-read.csv("VIN5.CSV")
names(vin5)<-c("x", "y")
vout1<-read.csv("VOUT1.CSV")
names(vout1)<-c("x", "y")
vout2<-read.csv("VOUT2.CSV")
names(vout2)<-c("x", "y")
vout3<-read.csv("VOUT3.CSV")
names(vout3)<-c("x", "y")
vout4<-read.csv("VOUT4.CSV")
names(vout4)<-c("x", "y")
vout5<-read.csv("VOUT5.CSV")
names(vout5)<-c("x", "y")
plot(vout5$y)
# Chunk 4
m_in<- (vin1$y+vin2$y+vin3$y+vin4$y+vin5$y)/5
#take average of vouts
m_vout <- data.frame(Frequency = vout1$x, Volts = (vout1$y+vout2$y+vout3$y+vout4$y+vout5$y)/5)
# Chunk 5
#compute gain using the average vouts and m_in
gain <- data.frame(Frequency = vout1$x, Gain = (m_vout[2]/m_in))
plot(gain)
#this is consistent with the max gain of 150 calculated in class.
# Chunk 6
rmserrors <- sqrt(data.frame(
vin1 = sum(((m_in-vin1$y)^2))/399,
vin2 = sum(((m_in-vin2$y)^2))/399,
vin3 = sum(((m_in-vin3$y)^2))/399,
vin4 = sum(((m_in-vin4$y)^2))/399,
vin5 = sum(((m_in-vin5$y)^2))/399,
vout1 = sum((m_vout$Volts-vout1$y)^2)/399,
vout2 = sum((m_vout$Volts-vout2$y)^2)/399,
vout3 = sum((m_vout$Volts-vout3$y)^2)/399,
vout4 = sum((m_vout$Volts-vout4$y)^2)/399,
vout5 = sum((m_vout$Volts-vout5$y)^2)/399
))
#error in gain, adding in quadrature:
vinerror <-sqrt(sum(rmserrors[1:5]^2))
vouterror <- sqrt(sum(rmserrors[6:10]^2))
gainerror <- gain[2]*sqrt((vinerror/m_in)^2+(vouterror*(m_vout[2])^-1)^2)
#g(f) error
plot(1:399,unlist(gainerror[1]))
# Chunk 7
capacitance <-87.875
capacitanceError <-.594
#df is just the x componenent
riemanSum <- function(fa,fb){
area <-0.5*(125)*(fb-fa)+fa^2
return(area)
}
resistors<-read.csv("experiment2data.csv")
resistors$Average[1]
C = capacitance
integrand <- data.frame(
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[1])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[2])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[3])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[4])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[5])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[6])^2),
gain[2]/(1+(2*pi*C*vin1$x*resistors$Average[7])^2)
)
area <- data.frame(
G1 =0,
G2 =0,
G3 =0,
G4 =0,
G5 =0,
G6 =0,
G7 =0
)
for(i in 1:length(integrand)){
for(l in 1:398){
if(is.null(integrand[l+1,i])){
break
}else{
area[i] <- area[i]+ riemanSum(integrand[l,i],integrand[l+1,i])
}}
}
# Chunk 8: ErrorShit
qplot(unlist(gain[1]),unlist(gain[2]))+geom_errorbar(aes(x=unlist(gain[1]), ymin=unlist(gain[2]-gainerror[1]), ymax=unlist(gain[2]+gainerror[1])), width=0.5)
library("Hmisc")
plot(gain[1], gain[2], type="n")
with (
data = gain
, expr = errbar(gain[1], gain[2], gain[2]+(gainerror[1]), gain[2]-(gainerror[1]), add=T, pch=1, cap=.1)
)
with (
data = gain
, expr = errbar(gain[1], gain[2], gain[2]+(gainerror[1]), gain[2]-(gainerror[1]), add=F, pch=1, cap=.015, log="x")
)
qplot(unlist(gain[1]),unlist(gain[2]))+geom_errorbar(aes(x=unlist(gain[1]), ymin=unlist(gain[2]-gainerror[1]), ymax=unlist(gain[2]+gainerror[1])), width=0.5)
qplot(unlist(gain[1]),unlist(gain[2]),xlim = c(1, 20000))+geom_errorbar(aes(x=unlist(gain[1]), ymin=unlist(gain[2]-gainerror[1]), ymax=unlist(gain[2]+gainerror[1])), width=0.5)
qplot(unlist(gain[1]),unlist(gain[2]),xlim = c(3000, 10000))+geom_errorbar(aes(x=unlist(gain[1]), ymin=unlist(gain[2]-gainerror[1]), ymax=unlist(gain[2]+gainerror[1])), width=0.5)
qplot(unlist(gain[1]),unlist(gain[2]),xlim = c(3000, 10000))+geom_errorbar(aes(x=unlist(gain[1]), ymin=unlist(gain[2]-gainerror[1]), ymax=unlist(gain[2]+gainerror[1])), width=1)
qplot(unlist(gain[1]),unlist(gain[2]),xlab = "Frequency",ylab = "gain",xlim = c(3000, 10000))+geom_errorbar(aes(x=unlist(gain[1]), ymin=unlist(gain[2]-gainerror[1]), ymax=unlist(gain[2]+gainerror[1])), width=1)
qplot(unlist(gain[1]),unlist(gain[2]),xlab = "Frequency",ylab = "Gain",xlim = c(3000, 10000))+geom_errorbar(aes(x=unlist(gain[1]), ymin=unlist(gain[2]-gainerror[1]), ymax=unlist(gain[2]+gainerror[1])), width=1)
qplot(unlist(gain[1]),unlist(gain[2]),xlab = "Frequency",ylab = "Gain",xlim = c(2000, 15000))+geom_errorbar(aes(x=unlist(gain[1]), ymin=unlist(gain[2]-gainerror[1]), ymax=unlist(gain[2]+gainerror[1])), width=1)
